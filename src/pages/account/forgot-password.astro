---
export const prerender = false;

const { origin } = Astro.url;

import '@/styles/globals.css';
import Layout from '@/layouts/Layout.astro';
import { Button } from '@components/ui/button';
import {
  createAdminClient,
  createSessionClientFromRequest,
} from '@/server/appwrite';
import Messages, { type Message } from '@components/astro/Messages.astro';
import Landing from '@/layouts/Landing.astro';
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { isValidEmail } from '@/lib/validators';

const getSuccessMessage = (): Message => {
  return {
    type: 'success',
    message: 'Password recovery mail sent!',
  };
};

const messages: { type: string; message: string }[] = [];
if (Astro.request.method === 'POST') {
  const data = await Astro.request.formData();
  const mail = data.get('email') as string;
  if (!mail || !isValidEmail(mail)) {
    messages.push({
      type: 'error',
      message: 'Invalid email address. Please try again.',
    });
  } else {
    try {
      const { account } = createAdminClient();
      await account.createRecovery(mail, `${origin}/account/password`);

      messages.push(getSuccessMessage());
    } catch (error: any) {
      console.error('Error sending email:', error);
      if (404 === error.code || 'user_not_found' === error.type) {
        messages.push(getSuccessMessage());
      } else {
        messages.push({
          type: 'error',
          message: 'Error sending email. Please try again later.',
        });
      }
    }
  }
}
---

<Layout title="Verify account" description="Verify your email account">
  <Landing>
    <main
      class="w-full h-dvh flex flex-col justify-center items-center max-w-lg mx-auto gap-4"
    >
      {messages.length > 0 && <Messages messages={messages} />}

      <Card className="mx-auto max-w-sm">
        <CardHeader>
          <CardTitle className="text-xl">Password recovery</CardTitle>
          <CardDescription>
            Enter your email, if you have an account, you will receive an email
            with instructions to reset your password.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <form method="post">
            <div class="grid gap-4">
              <div class="grid gap-2">
                <Label htmlFor="email">Email</Label>
                <Input
                  id="email"
                  type="email"
                  name="email"
                  placeholder="doe@example.com"
                  required
                />
              </div>
              {
                !messages.length && (
                  <Button type="submit" className="w-full">
                    Recover password
                  </Button>
                )
              }
            </div>
          </form>
        </CardContent>
      </Card>
    </main>
  </Landing></Layout
>
