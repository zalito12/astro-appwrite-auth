---
export const prerender = false;

import '@/styles/globals.css';
import Layout from '@/layouts/Layout.astro';
import { Button } from '@components/ui/button';
import { createAdminClient } from '@/server/appwrite';
import Messages, { type Message } from '@components/astro/Messages.astro';
import Landing from '@/layouts/Landing.astro';
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';

const dataHasError = (data: FormData): string[] | false => {
  const password = data.get('password') as string;
  const password1 = data.get('password1') as string;
  const userId = data.get('userId') as string;
  const secret = data.get('secret') as string;

  const errors = [];
  if (
    typeof password !== 'string' ||
    typeof password1 !== 'string' ||
    password !== password1
  ) {
    errors.push('Paswords do not match. Please try again.');
  }

  if (typeof userId !== 'string' || typeof secret !== 'string') {
    errors.push('Wrong recovery link. Please try again.');
  }

  return errors.length > 0 ? errors : false;
};

const { searchParams } = Astro.url;
const secret = searchParams.get('secret') as string;
const userId = searchParams.get('userId') as string;

if (!secret || !userId) {
  //return new Response('Wrong recovery link', { status: 400 });
}

const messages: { type: string; message: string }[] = [];
if (Astro.request.method === 'POST') {
  const data = await Astro.request.formData();
  const dataErrors = dataHasError(data);

  if (dataErrors) {
    messages.push(
      ...dataErrors.map((message) => ({ message, type: 'error' }) as Message)
    );
  } else {
    try {
      const userId = data.get('userId') as string;
      const secret = data.get('secret') as string;
      const password = data.get('password') as string;
      const { account } = createAdminClient();
      await account.updateRecovery(userId, secret, password);
      return Astro.redirect('/account/login');
    } catch (error: any) {
      console.error('Error password reset:', error);
      if (
        'general_argument_invalid' === error.type &&
        error.message?.includes('password')
      ) {
        messages.push({
          message: error.message,
          type: 'error',
        });
      } else {
        messages.push({
          message: 'Error with password reset. Please try again later or ask for a new recovery link.',
          type: 'error',
        });
      }
    }
  }
}
---

<Layout title="Verify account" description="Verify your email account">
  <Landing>
    <main
      class="w-full h-dvh flex flex-col justify-center items-center max-w-lg mx-auto gap-4"
    >
      {messages.length > 0 && <Messages messages={messages} />}

      <Card className="mx-auto max-w-sm">
        <CardHeader>
          <CardTitle className="text-xl">Password reset</CardTitle>
          <CardDescription>
            You can set a new password to login to your account.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <form method="post">
            <input type="hidden" name="userId" value={userId} />
            <input type="hidden" name="secret" value={secret} />
            <div class="grid gap-4">
              <div class="grid gap-2">
                <Label htmlFor="password">Password</Label>
                <Input
                  id="password"
                  type="password"
                  name="password"
                  autoComplete="current-password"
                  required
                />
              </div>
              <div class="grid gap-2">
                <Label htmlFor="password1">Password verify</Label>
                <Input
                  id="password1"
                  type="password"
                  name="password1"
                  autoComplete="current-password"
                  required
                />
              </div>
              <Button type="submit" className="w-full">
                Set new password
              </Button>
            </div>
          </form>
        </CardContent>
      </Card>
    </main>
  </Landing></Layout
>
