---
export const prerender = false;

const { origin } = Astro.url;
const { user } = Astro.locals as { user?: Models.User<Models.Preferences> };
if (!user || user.emailVerification) {
  return Astro.redirect('/account/login');
}

import '@/styles/globals.css';
import Layout from '@/layouts/Layout.astro';
import { Button, buttonVariants } from '@components/ui/button';
import { ChevronRight, Mail } from 'lucide-react';
import { createSessionClientFromRequest } from '@/server/appwrite';
import type { Models } from 'node-appwrite';
import Messages from '@components/astro/Messages.astro';
import Landing from '@/layouts/Landing.astro';

let attempts = 0;
const messages: { type: string; message: string }[] = [];
if (Astro.request.method === 'POST') {
  const data = await Astro.request.formData();
  const action = data.get('action') as string;
  const paramAttempts = Number(data.get('attempts'));
  attempts = isNaN(paramAttempts) ? 0 : paramAttempts + 1;
  if ('email' === action) {
    try {
      const { account } = createSessionClientFromRequest(Astro.request);
      await account.createVerification(origin);
      messages.push({ type: 'success', message: 'Verification email sent!' });
    } catch (error) {
      console.error('Error sending email:', error);
      messages.push({
        type: 'error',
        message: 'Error sending email. Please try again later.',
      });
    }
  }
}
---

<Layout title="Verify account" description="Verify your email account">
  <Landing user={user}>
    <main
      class="w-full h-dvh flex flex-col justify-center items-center max-w-lg mx-auto"
    >
      <Messages messages={messages} />
      <div class="flex flex-col items-center gap-1 text-center">
        <Mail className="w-20 h-20 text-blue-500" />
        <h1 class="text-3xl font-bold tracking-tight">
          Verify your email account
        </h1>
        <p class="text-lg text-muted-foreground">
          To access your account, you must first verify your email address.
          Check your inbox or spam folder for the verification email.
        </p>
        <div class="mt-6">
          <a
            href="/account/login"
            class={buttonVariants({ variant: 'outline' })}
          >
            It's done! Let me login
            <ChevronRight className="w-6 h-6" />
          </a>
        </div>
        {
          attempts < 1 && (
            <div class="mt-4 text-sm text-gray-500">
              <p>
                Didn't receive the email? Click the button below to resend the
                email.
              </p>
              <form method="post">
                <input type="hidden" name="action" value="email" />
                <input type="hidden" name="attempts" value={attempts} />
                <Button type="submit" variant="link">
                  Resend email
                </Button>
              </form>
            </div>
          )
        }
      </div>
    </main>
  </Landing>
</Layout>
